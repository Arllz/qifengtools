进程：进程是正在运行的程序的实例，它是操作系统动态执行的基本单元。程序是一个没有生命的实体，只有操作系统执行它时，它才能成为一个活动的实体，我们称之为进程。
动态性： 进程的实质是程序在多道程序系统中的一次执行过程，进程是动产生的，动态消亡的。
并发性：任何进程都可以同其他进程一起并发执行。
独立性：进程是一个能独立运行的基本单位，同时也是系统分配资源和调度的独立单位。
异步性：由于进程间的相互制约，是进程具有执行的间接性，即进程按各自独立的，不可预知的速度向前推进结构特征：进程由程序，数据和进程控制块三部分组成。

线程：线程是操作系统能够进行运算调度的最小单位，它被包含在进程之中，是进程中的实际运作单位。一条线程指的是进程中一个单一顺序的控制流，一个进程中可以并发多个线程，每条线程并行执行不同的任务。线程是独立调度和分派的基本单位，线程可以为操作系统内核调度的内核线程。
一个标准的线程有线程ID，当前指令指针PC,寄存器和堆栈组成。 

协程：“用户态的线程”。


堆栈：是一个特定的存储区或者寄存器，他的一段是固定的，另一端是浮动的。对于这个存储去存入的数据，是一种特殊的数据结构。
堆栈空间分配：
栈：有操作系统自动分配释放，存放函数的参数值，局部变量等。
堆：一般由程序员分配释放，若程序员不释放，程序结束可有os(操作系统)回收。分配方式类似链表.
<1>与线程绑定的是“栈”，用于存储自动变量，每个线程建立的时候，都会新建默认栈与之配合。
<2>“堆”则是与进程相关，用于存储全局性的变量，进程建立的时候，会建立默认的堆。
栈使用的是一级缓存，他们通常都是被调用是处于存储空间中，调用完毕立即释放。
堆则是存放在耳机缓存中，生命周期有虚拟机的垃圾回收算法来定（并不是一旦成为孤儿对象就被回收）。所以调用这些对象的速度相对来的低一些。
